services:
  rag-app:
    container_name: rag-app
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8501:8501"
    volumes:
      - ..:/app
    depends_on:
      - qdrant
      - ollama
    networks:
      - rag-network
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_HOST=http://ollama:11434
      - PYTHONPATH=/app
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: >
      sh -c '
      echo "Waiting for Ollama to initialize..." &&
      until curl -s -f http://ollama:11434/api/tags >/dev/null 2>&1; do
        echo "Waiting for Ollama..."
        sleep 2
      done &&
      echo "Ollama is ready!" &&
      ollama pull tinyllama &&
      cd /app &&
      PYTHONPATH=/app streamlit run src/app.py --server.address=0.0.0.0 --server.port=8501'
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://ollama:11434/api/tags"]
      interval: 10s
      timeout: 5s
      retries: 5

  qdrant:
    container_name: qdrant
    image: qdrant/qdrant
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT_ALLOW_RECOVERY=true
    ports:
      - "6333:6333"
      - "6334:6334"
    restart: unless-stopped
    networks:
      - rag-network
    command: sh -c "mkdir -p /qdrant/storage && chmod 777 /qdrant/storage && /qdrant/qdrant"

  ollama:
    container_name: ollama
    image: ollama/ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - rag-network
    deploy:
      resources:
        reservations:
          memory: 8GB
        limits:
          memory: 10GB

volumes:
  qdrant_storage:
    driver: local
  ollama_data:
    driver: local

networks:
  rag-network:
    driver: bridge
